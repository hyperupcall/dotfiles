# Syntax:
#   <condition1> , <condition2> , ... = command
#
# The command can contain these environment variables:
#   $1-$9 | The n-th selected file
#   $@    | All selected files
#
# If you use the special command "ask", rifle will ask you what program to run.
#
# Prefixing a condition with "!" will negate its result.
# These conditions are currently supported:
#   match <regexp> | The regexp matches $1
#   ext <regexp>   | The regexp matches the extension of $1
#   mime <regexp>  | The regexp matches the mime type of $1
#   name <regexp>  | The regexp matches the basename of $1
#   path <regexp>  | The regexp matches the absolute path of $1
#   has <program>  | The program is installed (i.e. located in $PATH)
#   env <variable> | The environment variable "variable" is non-empty
#   file           | $1 is a file
#   directory      | $1 is a directory
#   number <n>     | change the number of this command to n
#   terminal       | stdin, stderr and stdout are connected to a terminal
#   X              | A graphical environment is available (darwin, Xorg, or Wayland)
#
# There are also pseudo-conditions which have a "side effect":
#   flag <flags>  | Change how the program is run. See below.
#   label <label> | Assign a label or name to the command so it can
#                 | be started with :open_with <label> in ranger
#                 | or `rifle -p <label>` in the standalone executable.
#   else          | Always true.
#
# Flags are single characters which slightly transform the command:
#   f | Fork the program, make it run in the background.
#     |   New command = setsid $command >& /dev/null &
#   r | Execute the command with root permissions
#     |   New command = sudo $command
#   t | Run the program in a new terminal.  If $TERMCMD is not defined,
#     | rifle will attempt to extract it from $TERM.
#     |   New command = $TERMCMD -e $command
# Note: The "New command" serves only as an illustration, the exact
# implementation may differ.
# Note: When using rifle in ranger, there is an additional flag "c" for
# only running the current file even if you have marked multiple files.

# ------------------ SPECIFIC EXTENSIONS ----------------- #
ext ^pdf,   X, has okular,  flag f = okular -- "$@"
ext ^djvu,  X, has zathura, flag f = zathura -- "$@"
ext ^docx?, terminal, has catdoc = catdoc -- "$@" | $PAGER
ext 1 = man "$@"
ext 2 = man "$@"
ext 3 = man "$@"
ext 5 = man "$@"
ext 6 = man "$@"
ext 7 = man "$@"
ext 8 = man "$@"
ext 9 = man "$@"
ext ^sc,    has sc,                    = sc -- "$@"
# mime application/x-executable = "$1"
ext sla,  has scribus,      X, flag f = scribus -- "$@"
# ext x?html?, has surf,             X, flag f = surf -- file://"$1"
# ext x?html?, has qutebrowser,      X, flag f = qutebrowser -- "$@"
ext x?html?, has elinks, terminal = elinks "$@"
ext 7z, has 7z = 7z -p l "$@" | $PAGER
ext ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,     has atool = atool --list --each -- "$@" | $PAGER
ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --list --each -- "$@" | $PAGER


# ---------------------- APPLICATION --------------------- #
mime ^application = ask


# ------------------------- AUDIO ------------------------ #
mime ^audio, X,        has mpv, flag f = mpv -- "$@"
mime ^audio, X = ask

mime ^audio, terminal, has mpv = mpv -- "$@"
mime ^audio, terminal, has mplayer = mplayer -- "$@"
mime ^audio, terminal = ask

ext  ^aup,   X,        has audacity, flag f = audacity -- "$@"


# ------------------------- FONTS ------------------------ #
mime ^font,  X, has fontforge, flag f = fontforge "$@"
mime ^font = ask


# ------------------------ IMAGES ------------------------ #
mime ^image, X, has sxiv,      flag f = sxiv -- "$@"
mime ^image, X = ask

ext ^kra,    X, has krita,     flag f = krita -- "$@"
ext ^xcf,    X, has gimp,      flag f = gimp -- "$@"


# ----------------------- MESSAGES ----------------------- #
mime ^message = ask


# ------------------------- MODEL ------------------------ #
mime ^model = ask


# ----------------------- MULTIPART ---------------------- #
mime ^multipart = ask


# ------------------------- TEXT ------------------------- #
mime ^text, label editor = ${VISUAL:-$EDITOR} -- "$@"
# mime ^text = ask


# ------------------------- VIDEO ------------------------ #
mime ^video, X,            has mpv, flag f = mpv -- "$@"
mime ^audio, X,            has mplayer, flag f = mplayer -- "$@"
mime ^video, X = ask

mime ^video, terminal, !X, has mpv = mpv -- "$@"
mime ^video, terminal = ask


# --------------------- MISCELLANEOUS -------------------- #
mime ^ranger/x-terminal-emulator, has kitty = kitty -- "$@"

label open,  has xdg-open = xdg-open "$@"
label editor = "${VISUAL:-$EDITOR}" -- "$@"
label pager  = "$PAGER" -- "$@"
label trash, has trash-put = trash-put -- "$@"

else = xdg-open "$1"
