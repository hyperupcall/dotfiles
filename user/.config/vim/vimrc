set nocompatible

if empty("$MYVIMRC") | let $MYVIMRC = expand('<sfile>:p') | endif
if empty("$XDG_CONFIG_HOME") | let $XDG_CONFIG_HOME = $HOME."/.config" | endif
if empty("$XDG_DATA_HOME") | let $XDG_DATA_HOME = $HOME."/.local/share" | endif
if empty("$XDG_STATE_HOME") | let $XDG_STATE_HOME = $HOME."/.local/state" | endif
if empty("$XDG_CACHE_HOME") | let $XDG_CACHE_HOME = $HOME."/.cache" | endif

let xdgDataHome = exists('$XDG_DATA_HOME') ? $XDG_DATA_HOME : $HOME.'.local/data'

source `=expand($XDG_CONFIG_HOME."/vim/modules/pathogen.vim")`
source `=expand($XDG_CONFIG_HOME."/vim/modules/plug.vim")`

set runtimepath^=$XDG_CONFIG_HOME/vim
set runtimepath+=$XDG_DATA_HOME/vim
set packpath^=$XDG_DATA_HOME/vim

let g:netrw_home = $XDG_DATA_HOME."./vim"
" set spellfile=$XDG_CACHE_HOME."/vim/".$LANG."add"
" call mkdir($XDG_CACHE_HOME."/vim/".$LANG."add", 'p')

set viewdir=$XDG_DATA_HOME."/vim/view" | call mkdir(&viewdir, 'p')
set backupdir=$XDG_STATE_HOME."/vim/backup" | call mkdir(&backupdir, 'p')
set directory=$XDG_STATE_HOME."/vim/swap" | call mkdir(&directory, 'p')
set undodir=$XDG_STATE_HOME."/vim/undo" | call mkdir(&undodir, 'p')
set viminfofile=$XDG_CACHE_HOME."/vim/viminfo"

" Write buffer through sudo (works on vim but not neovim)
command! W execute 'w !sudo tee % > /dev/null' ^V|  edit!

call plug#begin(xdgDataHome.'/vim/vim-plug')
Plug 'tpope/vim-sensible'
call plug#end()

" Jump to last position when reopening file
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
